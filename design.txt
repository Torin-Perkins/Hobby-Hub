Link to full design document: https://docs.google.com/document/d/1Ew69tyBKFvKvrvJ68Q2MzbmGKReXCtqptLY2Bp4H8qM/edit?usp=sharing

Hobby Hub Project Description
https://github.com/Torin-Perkins/Hobby-Hub
https://trello.com/b/tpLrnKdo/hobby-hub-tasks

Functional Overview: A mobile app for people to connect based on their hobbies. Hobbies will be organized under a set number of broad categories. Users will be able to add new hobbies to existing categories and conduct chats to share tips, ideas, resources, etc. among their groups. 
Target Audience: Users of all ages looking to connect with others who have similar interests or get advice and tips on how to get started with a given hobby.

Goal at the end of 3 weeks:
Have our MVP finished and debugged, and have an account system setup with usernames

Features: 
Account Creation and Use
Connection Algorithm
Chat functionality and monitoring

Tools:
	VS code
	Xamarin (cross platform development for both iOS and Android)
Language:
	C#
	XAML
IDE:
	VScode

Database: MySQL

Server space: Google Cloud
	
Hobby Categories:
Science
Technology
Art
Math
Sports

Task breakup:
Front end
What the user can control
What the user can see
.XAML (w/ some C#)
Activity management (deleting hobbies and posts due to inactivity)
Nividh and Tanvi
Back end
Database infrastructure
MySQL and google cloud
Communicate w/ front end
Torin and Scott



MVP / Key Features:
An app that builds -- both front & back
All UI elements are rendered on the screen and the user can navigate the UI without causing build errors
Server space -- back end
The app connects to a database to store the user’s posts and hobbies and data is read in from the database to display those changes across devices
A barebones UI -- front end
User is able to navigate between different broad categories and into the chats for specific hobbies (there are ways to navigate forward and back to the user doesn’t get “stuck”)
An ability to make text posts
To have the post be visible and interactable to self -- front end
User will be able to post in the chat of a hobby and see their own posts
To have the post be visible and interactable to others -- back end
User’s posts will be saved in the database and shown to other users to facilitate a chat
Ability to interact w/ hobbies
Creation of category -- front end
User can click on the add button within a broad category and add another hobby with a description (this creates a chat for that hobby)
Category interactable to others -- back end
	This new category will be saved in the database so all users can post in the chat
Category interactable to self -- front end
The user will be able to post in this chat of this new hobby (this won’t require immediate connection to the server)

POIs (points where front end interacts with back end to save/show posts or hobbies):
Messages
Accounts
Categories

Extra features (in order of priority and feasibility):
Aesthetically pleasing UI
The UI can be navigated and is clear to the user as well as being aesthetically pleasing and professional 
Account creation
Each user will be given an account where they set their username and password (usernames will be unique because they will be recorded when the user posts)
A nice logo
	Adds to the professional quality of the UI
Category hierarchy
Users will be able to select more than one broad category to classify their hobby (more like a hashtag system than the hierarchy in the MVP)
Images/file comp
Users will be able to attach files and images to their posts (requires file compression on the server side)
Commenting on posts (“threads” of conversation)
Users will be able to respond directly to one post within the conversation which starts a “thread”
Reacting to posts
Users will be able to react to posts with emojis
Moderation
The app will be moderated both to maintain the integrity of the service and to make best use of server space
Delete posts (a la snapchat) after a certain amount of time to save server space
	In order to make the best use of server space, old posts will be deleted
Delete hobbies if not in use
In order to make the best use of server space, hobbies that have been inactive (no users have posted) for a given amount of time will be deleted along will as the associated posts
Users ‘subscribe’ to hobbies/categories
Users will be able to subscribe to a given hobby or category so it will be shown on the welcome page when they open the app (possibly can also implement notifications)
Recommendation Algorithm based on User’s previous activity
Based on the users previous activity and their subscriptions, the app will provide recommendations for hobbies the user might want to view (these will also be shown on the welcome page when the app is opened)
Monetization to pay for server space
If the number of users and posts grow beyond the free server space, we will need a way to monetize services in order to pay for server space
